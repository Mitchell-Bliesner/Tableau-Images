name: Generate Image CSV
on:
  push:
    paths:
      - 'test/**'       # run only on changes inside test folder
      - '.github/workflows/generate_csv.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get changed subfolders
        id: get_changed
        run: |
          echo "changed=$(git diff --name-only ${{ github.sha }}~1 ${{ github.sha }} | grep '^test/' | cut -d/ -f2 | sort | uniq | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Run CSV generator on changed subfolders
        run: |
          python - <<EOF
          import os, csv
          from urllib.parse import quote

          BASE_URL = "https://mitchell-bliesner.github.io/Tableau-Images/"
          ROOT_FOLDER = "test"
          CSV_FILE = "image_urls.csv"

          changed_folders = '${{ steps.get_changed.outputs.changed }}'.split()

          # Load existing rows and URLs to avoid duplicates
          existing_rows = []
          existing_urls = set()
          if os.path.exists(CSV_FILE):
              with open(CSV_FILE, "r", encoding="utf-8", newline="") as f:
                  reader = csv.DictReader(f)
                  for row in reader:
                      existing_rows.append(row)
                      existing_urls.add(row["image_url"])

          new_rows = []
          for folder_name in changed_folders:
              folder_path = os.path.join(ROOT_FOLDER, folder_name)
              if os.path.isdir(folder_path):
                  for fname in os.listdir(folder_path):
                      if fname.lower().endswith((".png", ".jpg", ".jpeg")):
                          image_name = os.path.splitext(fname)[0]
                          rel_path = quote(os.path.join(folder_path, fname).replace("\\", "/"))
                          image_url = f"{BASE_URL}/{rel_path}"
                          new_rows.append({"image_name": image_name, "image_url": image_url})

          # Append only new images
          final_rows = existing_rows.copy()
          for row in new_rows:
              if row["image_url"] not in existing_urls:
                  final_rows.append(row)

          # Write CSV
          with open(CSV_FILE, "w", newline="", encoding="utf-8") as f:
              writer = csv.DictWriter(f, fieldnames=["image_name", "image_url"])
              writer.writeheader()
              writer.writerows(final_rows)
          EOF

      - name: Commit CSV back to repo
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add image_urls.csv
          git commit -m "Update image URLs CSV" || echo "No changes to commit"
          git push
